
// Layout variables
//
$layout-sizes: (
  gutter-small: units(2),
  gutter-medium: units(3),
  gutter-large: units(7),
  header-height: units(7),
  viewport-height-min: units(84),
  card-width-small: units(40),
  card-width: units(56),
  card-width-large: units(85),
  column-width-narrow: units(56),
  column-width-wide: units(152)
  );

// Helper for accessing the layout sizes
//
@function layout($size) {
  @if map-has-key($layout-sizes, $size) {
    @return map-get($layout-sizes, $size);
  }
}

// Breakpoint map
//
$breakpoints: (
  mobile-breakpoint-smallest: layout(card-width-small),
  mobile-breakpoint-small: layout(card-width),
  mobile-breakpoint: layout(card-width-large),
  widescreen-breakpoint: layout(column-width-wide),
  tallscreen-breakpoint: layout(column-width-wide),
);

// Helpers for accessing breakpoints
//
@mixin when-smaller-than($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @media (max-width: $value) {
    @content;
  }
}

@mixin when-larger-than($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @media (min-width: $value) {
    @content;
  }
}

@mixin when-taller-than($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @media (min-height: $value) {
    @content;
  }
}

// Layout default settings
//
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
}

// Layout utility
//
// Two columns with flex.
// Override column width as needed.
.layout-two-column {
  display: flex;
  .column-secondary {
    flex: 0;
  }
  .column-primary {
    flex: 3;
  }
}

// Contains a fab,
// so it can be positioned absolutely without affecting positioning context of parents
.layout-fab-container {
  position: relative;
}
