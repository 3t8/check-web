.task {
  margin-bottom: units(2);
  position: relative;

  // material-ui/Card>div overrides
  &__card-text {
    padding-bottom: 0 !important;
    padding-top: 0 !important;
  }

  &__actions {
    position: absolute;
    top: units(2);
    #{$to-direction}: units(2);
  }

  &__question {
    color: $black-54;
    margin-#{$to-direction}: units(4);
  }

  &__label-container {
    padding-bottom: units(1);
    padding-top: units(2);
  }

  &__label {
    @extend %break-word;
    color: $black-54;
    font-size: units(2);
    padding-bottom: units(1);
    padding-top: units(2);
  }

  &__response {
    font-size: units(2);
    text-align: $from-direction;
  }

  &__response-inputs {
    max-height: 0;
    overflow: hidden;
    transition: max-height $transition-speed-fast ease;
  }

  // Toggle response area (and toggle description, if longer than one line)
  //
  // TODO: move dynamic display logic into the component. CGB 2017-5-15
  /* stylelint-disable */
  &__response-toggle {
    display: none;

    &:not(:checked) {
      & ~ label .task__label-container {
        @extend %ellipsis;
        cursor: pointer;
      }
    }

    &:checked {
      & ~ label .task__label-container {
        overflow: visible;
        white-space: normal;
        width: 100%;
      }

      & ~ .task__response-inputs {
        // Tall enough to always be visible
        max-height: units(625);
        transition: max-height $transition-speed-fast ease;
      }
    }
  }
  /* stylelint-enable */

  &__resolver {
    color: $black-38;
    text-align: $to-direction;
  }

  &__resolved {
    p {
      margin: units(1) 0;
      word-wrap: break-word;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  &__options {
    margin-top: units(2);
  }

  &__options-answered {
    color: $black-38;
    margin-top: units(2);
  }

  &__option_other_radio {
    float: $from-direction;
    margin-top: units(1);
    max-height: units(3);
    max-width: units(3);
    margin-#{$from-direction}: unit(1);
    margin-#{$to-direction}: units(2);
  }

  &__option_other_checkbox {
    float: $from-direction;
    margin-top: units(1);
    max-height: units(3);
    max-width: units(3);
    margin-#{$from-direction}: unit(1);
  }

  &__option_other_text_input {
    float: $from-direction;
    width: 75% !important;
  }

  &__options_other::after {
    clear: both;
    content: "";
    display: table;
  }

  .media-actions__icon {
    color: $black-38;
    height: units(3);
    margin: 0;
    padding: 0;
    width: units(3);
    margin-#{$to-direction}: units(1);
  }

  &__description-icon {
    color: $black-38;
    float: $to-direction;
    height: units(3);
    margin-bottom: units(1);
    margin-top: units(2);
    width: units(3);
    margin-#{$from-direction}: units(2);
    margin-#{$to-direction}: units(1);
  }

  // Task description tooltip
  // via rc-tooltip, outside Task.js markup tree
  //
  &__description-tooltip {
    @include when-smaller-than(mobile-breakpoint) {
      max-width: 40vw;
    }
    max-width: layout(column-width-medium);

    span {
      word-wrap: break-word;
    }
  }

  .leaflet-container {
    height: 400px;
  }

  .task__geolocation-response {
    display: flex;
    text-align: $from-direction;

    .task__response, .task__note {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .task__note {
      color: $black-54;
      padding-#{$from-direction}: units(1);
    }

    .task__geolocation-image {
      flex-grow: 1;
      text-align: $to-direction;
    }

    img {
      width: 56px;
      height: 56px;
      cursor: pointer;
    }
  }

  .task__icon {
    color: $black-54;
    position: absolute;
    #{$to-direction}: 0;
    bottom: 15px;

    svg {
      width: 20px;
      height: 20px;
    }
  }

  #task__response-time {
    color: $black-38;
    display: flex;
    align-items: center;
  }

  .task__error {
    display: block;
    color: $alert-red;
  }

  .task__datetime-timezone {
    margin-#{$from-direction}: units(2);
  }

  .task__datetime-response a {
    color: $black-87;
    text-decoration: underline;
  }
}

#task__edit-response-button {
  cursor: pointer;
}

.ReactModal__Overlay {
  z-index: 1200;
}

.leaflet-container {
  height: 600px;
}
